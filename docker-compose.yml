services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.0
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka_network

  kafka1:
    image: confluentinc/cp-kafka:7.9.0
    container_name: kafka1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9095
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9095
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    networks:
      - kafka_network
    ports:
      - "9095:9095"

  kafka2:
    image: confluentinc/cp-kafka:7.9.0
    container_name: kafka2
    restart: always
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    networks:
      - kafka_network
    ports:
      - "9093:9093"

  kafka3:
    image: confluentinc/cp-kafka:7.9.0
    container_name: kafka3
    restart: always
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    networks:
      - kafka_network
    ports:
      - "9094:9094"

  haproxy:
    image: haproxy:latest
    container_name: kafka-lb
    restart: always
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - kafka_network
    ports:
      - "9092:9092"

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: kafka-exporter
    restart: always
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    command:
      - "--kafka.server=kafka1:9095"
      - "--kafka.server=kafka2:9093"
      - "--kafka.server=kafka3:9094"
    networks:
      - kafka_network
    ports:
      - "9308:9308"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - kafka_network
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    depends_on:
      - prometheus
    networks:
      - kafka_network
    ports:
      - "3000:3000"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    networks:
      - kafka_network
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "kafka-cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka-lb:9092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"

networks:
  kafka_network:
    driver: bridge
